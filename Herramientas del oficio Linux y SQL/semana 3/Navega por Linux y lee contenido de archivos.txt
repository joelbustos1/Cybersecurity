Estándar de jerarquía del sistema de archivos (FHS)
Anteriormente, aprendiste que el estándar de jerarquía del sistema de archivos (FHS) es el componente de Linux que organiza los datos. El FHS es importante porque define cómo se organizan los directorios, el contenido de estos y otros tipos de almacenamiento en el sistema operativo.

Este diagrama ilustra la jerarquía de relaciones según el FHS:


El diagrama de flujo comienza con el directorio raíz en la parte superior y se ramifica hacia abajo en múltiples subdirectorios.

Según el FHS, la ubicación de un archivo puede ser descrita por una ruta de archivo. Una ruta de archivo es la ubicación de un archivo o directorio. En la ruta del archivo, los diversos niveles de la jerarquía están separados por una barra (/).

Directorio raíz (o root)

El directorio raíz es el directorio de mayor nivel en Linux, y siempre se representa con una barra (/). Todos los subdirectorios se ramifican desde el directorio raíz y pueden continuar ramificándose a tantos niveles como sea necesario.

Directorios estándar del FHS

Justo debajo del directorio raíz, encontrarás los directorios estándar del FHS. En el diagrama, home, bin y etc son eso mismo. Estos son algunos ejemplos del contenido de los directorios estándar:

/home: Cada usuario del sistema obtiene su propio directorio de inicio.

/bin: Este directorio significa “binario” y contiene archivos binarios y otros archivos ejecutables. Los archivos ejecutables contienen una serie de comandos que una computadora debe seguir para ejecutar programas y llevar a cabo otras funciones.

/etc: Este directorio almacena los archivos de configuración del sistema.

/tmp: Este directorio almacena varios archivos temporales. Las/los atacantes suelen usar el directorio /tmp porque cualquier persona en el sistema puede modificar datos en estos archivos.

/mnt: Este directorio significa “montaje” y almacena medios, como unidades USB y discos duros.

Consejo profesional: Puedes usar el comando man hier para obtener más información acerca del FHS y sus directorios estándar.

Subdirectorios específicos del usuario

En home hay subdirectorios para usuarios específicos. En el diagrama, estos usuarios son analyst y analyst2. Cada usuario tiene sus propios subdirectorios personales, como projects, logs o reports.

Nota: Cuando la ruta conduce a un subdirectorio debajo del directorio de inicio del usuario, este puede representarse con una virgulilla (~). Por ejemplo, /home/analyst/logs también puede representarse como ~/logs.

Puedes navegar a subdirectorios específicos utilizando sus rutas de archivo absolutas o relativas. La ruta de archivo absoluta es la ruta completa del archivo, que comienza desde la raíz. Por ejemplo, /home/analyst/projects es una ruta de archivo absoluta. La ruta de archivo relativa comienza en el directorio actual del usuario.

Nota: Las rutas de archivo relativas pueden usar un punto (.) para representar el directorio actual, o dos puntos (..) para representar el directorio superior del directorio actual. Un ejemplo de una ruta de archivo relativa podría ser ../projects.

Comandos clave para navegar por el sistema de archivos
Los siguientes comandos de Linux pueden utilizarse para navegar por el sistema de archivos: pwd, ls y cd.

pwd

El comando pwd imprime el directorio de trabajo en la pantalla. O, en otras palabras, devuelve el directorio en el que te encuentras actualmente. 

La salida te da la ruta absoluta a este directorio. Por ejemplo, si estás en tu directorio home y tu nombre de usuario es analyst, al ingresar pwd, obtienes como resultado /home/analyst. 

Consejo profesional: Para saber cuál es tu nombre de usuario, usa el comando whoami. El comando whoami devuelve el nombre de usuario del usuario actual. Por ejemplo, si tu nombre de usuario es analyst, al ingresar whoami obtienes como resultado analyst.

ls

El comando ls muestra los nombres de los archivos y directorios en el directorio de trabajo actual. En el video, por ejemplo ls devolvió directorios como logs y un archivo llamado updates.txt. 

Nota: Si quieres acceder al contenido de un directorio que no sea tu directorio de trabajo actual, puedes agregar un argumento después de ls con la ruta de archivo absoluta o relativa al directorio deseado. Por ejemplo, si estás en el directorio /home/analyst pero quieres enumerar el contenido de tu subdirectorio projects, puedes ingresar ls /home/analyst/projects o simplemente ls projects.

cd

El comando cd se usa para navegar entre directorios. Cuando necesites cambiar de directorio, debes usar este comando.

Para navegar a un subdirectorio del directorio actual, puedes agregar un argumento después de cd con el nombre del subdirectorio. Por ejemplo, si estás en el directorio /home/analyst y quieres navegar a tu subdirectorio projects, puedes ingresar cd projects.

También puedes navegar a cualquier directorio específico ingresando la ruta de archivo absoluta. Por ejemplo, si estás en /home/analyst/projects, al ingresar cd /home/analyst/logs cambias de tu directorio actual a /home/analyst/logs.

Consejo profesional: Puedes usar la ruta de archivo relativa e ingresar cd .. para subir un nivel en la estructura de archivos. Por ejemplo, si el directorio actual es /home/analyst/projects, al ingresar cd .. cambiarías tu directorio de trabajo a /home/analyst. 

Comandos comunes para leer el contenido del archivo
Los siguientes comandos de Linux son útiles para leer el contenido del archivo: cat, head, tail y less.

cat

El comando cat muestra el contenido de un archivo. Por ejemplo, al ingresar cat updates.txt, se devuelve todo el contenido del archivo updates.txt.

head

El comando head muestra solo el comienzo de un archivo; 10 líneas, por defecto. El comando head puede ser útil cuando quieres conocer el contenido básico de un archivo pero no necesitas todo el contenido. Al ingresar head updates.txt, obtienes solo las primeras 10 líneas del archivo updates.txt.

Consejo profesional: Si quieres cambiar el número de líneas que devuelve el comando head, puedes incluir -n para especificar el número de líneas. Por ejemplo, si solo quieres que se te muestren las primeras cinco líneas del archivo updates.txt, ingresa head -n 5 updates.txt.

tail

El comando tail hace lo opuesto a head. Este comando puede usarse para mostrar solo el final de un archivo; 10 líneas, por defecto. Al ingresar tail updates.txt, obtienes solo las últimas 10 líneas del archivo updates.txt.

Consejo profesional: Puedes usar tail para leer la información más reciente en un archivo de registro.

less

El comando less devuelve el contenido de un archivo, una página a la vez. Por ejemplo, al escribir less updates.txt, se cambia la ventana de la terminal para mostrar el contenido de updates.txt una página a la vez. Esto te permite avanzar y retroceder por el contenido, con facilidad. 

Una vez que hayas accedido a tu contenido con el comando less, puedes usar varios controles de teclado para moverte por el archivo:

-Barra espaciadora: desplazarse a la página siguiente

-b: desplazarse a la página anterior

-Flecha hacia abajo: avanzar una línea

-Flecha hacia arriba: retroceder una línea

-q: salir y volver a la ventana de terminal anterior

Conclusiones clave
Es importante que las/los analistas de seguridad sepan navegar por Linux y el sistema de archivos del FHS. Algunos comandos clave para navegar por el sistema de archivos son pwd, ls y cd. Saber leer el contenido de archivos también es una habilidad importante en la profesión de ciberseguridad. Esto puede hacerse con comandos como cat, head, tail y less.   